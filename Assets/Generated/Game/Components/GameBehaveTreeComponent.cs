//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BehaveTreeComponent behaveTree { get { return (BehaveTreeComponent)GetComponent(GameComponentsLookup.BehaveTree); } }
    public bool hasBehaveTree { get { return HasComponent(GameComponentsLookup.BehaveTree); } }

    public void AddBehaveTree(System.Collections.Generic.List<NPBehave.Root> newBehaveTreeRoots) {
        var index = GameComponentsLookup.BehaveTree;
        var component = (BehaveTreeComponent)CreateComponent(index, typeof(BehaveTreeComponent));
        component.BehaveTreeRoots = newBehaveTreeRoots;
        AddComponent(index, component);
    }

    public void ReplaceBehaveTree(System.Collections.Generic.List<NPBehave.Root> newBehaveTreeRoots) {
        var index = GameComponentsLookup.BehaveTree;
        var component = (BehaveTreeComponent)CreateComponent(index, typeof(BehaveTreeComponent));
        component.BehaveTreeRoots = newBehaveTreeRoots;
        ReplaceComponent(index, component);
    }

    public void RemoveBehaveTree() {
        RemoveComponent(GameComponentsLookup.BehaveTree);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBehaveTree;

    public static Entitas.IMatcher<GameEntity> BehaveTree {
        get {
            if (_matcherBehaveTree == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BehaveTree);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBehaveTree = matcher;
            }

            return _matcherBehaveTree;
        }
    }
}
