//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ContextsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts : Entitas.IContexts {

    public static Contexts sharedInstance {
        get {
            if (_sharedInstance == null) {
                _sharedInstance = new Contexts();
            }

            return _sharedInstance;
        }
        set { _sharedInstance = value; }
    }

    static Contexts _sharedInstance;

    public BuffContext buff { get; set; }
    public GameContext game { get; set; }
    public MetaContext meta { get; set; }
    public NetMessageContext netMessage { get; set; }
    public NetworkContext network { get; set; }
    public RoomContext room { get; set; }
    public TickContext tick { get; set; }
    public UnitContext unit { get; set; }

    public Entitas.IContext[] allContexts { get { return new Entitas.IContext [] { buff, game, meta, netMessage, network, room, tick, unit }; } }

    public Contexts() {
        buff = new BuffContext();
        game = new GameContext();
        meta = new MetaContext();
        netMessage = new NetMessageContext();
        network = new NetworkContext();
        room = new RoomContext();
        tick = new TickContext();
        unit = new UnitContext();

        var postConstructors = System.Linq.Enumerable.Where(
            GetType().GetMethods(),
            method => System.Attribute.IsDefined(method, typeof(Entitas.CodeGeneration.Attributes.PostConstructorAttribute))
        );

        foreach (var postConstructor in postConstructors) {
            postConstructor.Invoke(this, null);
        }
    }

    public void Reset() {
        var contexts = allContexts;
        for (int i = 0; i < contexts.Length; i++) {
            contexts[i].Reset();
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EntityIndexGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

    public const string Camp = "Camp";
    public const string ConnectionID = "ConnectionID";
    public const string Name = "Name";
    public const string Room = "Room";
    public const string Unit = "Unit";

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeEntityIndices() {
        unit.AddEntityIndex(new Entitas.EntityIndex<UnitEntity, CampType>(
            Camp,
            unit.GetGroup(UnitMatcher.Camp),
            (e, c) => ((CampComponent)c).Value));

        unit.AddEntityIndex(new Entitas.PrimaryEntityIndex<UnitEntity, int>(
            ConnectionID,
            unit.GetGroup(UnitMatcher.ConnectionID),
            (e, c) => ((ConnectionIDComponent)c).ID));

        unit.AddEntityIndex(new Entitas.PrimaryEntityIndex<UnitEntity, string>(
            Name,
            unit.GetGroup(UnitMatcher.Name),
            (e, c) => ((NameComponent)c).Value));

        room.AddEntityIndex(new Entitas.PrimaryEntityIndex<RoomEntity, int>(
            Room,
            room.GetGroup(RoomMatcher.Room),
            (e, c) => ((RoomComponent)c).RoomID));

        unit.AddEntityIndex(new Entitas.PrimaryEntityIndex<UnitEntity, long>(
            Unit,
            unit.GetGroup(UnitMatcher.Unit),
            (e, c) => ((UnitComponent)c).ID));
    }
}

public static class ContextsExtensions {

    public static System.Collections.Generic.HashSet<UnitEntity> GetEntitiesWithCamp(this UnitContext context, CampType Value) {
        return ((Entitas.EntityIndex<UnitEntity, CampType>)context.GetEntityIndex(Contexts.Camp)).GetEntities(Value);
    }

    public static UnitEntity GetEntityWithConnectionID(this UnitContext context, int ID) {
        return ((Entitas.PrimaryEntityIndex<UnitEntity, int>)context.GetEntityIndex(Contexts.ConnectionID)).GetEntity(ID);
    }

    public static UnitEntity GetEntityWithName(this UnitContext context, string Value) {
        return ((Entitas.PrimaryEntityIndex<UnitEntity, string>)context.GetEntityIndex(Contexts.Name)).GetEntity(Value);
    }

    public static RoomEntity GetEntityWithRoom(this RoomContext context, int RoomID) {
        return ((Entitas.PrimaryEntityIndex<RoomEntity, int>)context.GetEntityIndex(Contexts.Room)).GetEntity(RoomID);
    }

    public static UnitEntity GetEntityWithUnit(this UnitContext context, long ID) {
        return ((Entitas.PrimaryEntityIndex<UnitEntity, long>)context.GetEntityIndex(Contexts.Unit)).GetEntity(ID);
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.VisualDebugging.CodeGeneration.Plugins.ContextObserverGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

#if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeContextObservers() {
        try {
            CreateContextObserver(buff);
            CreateContextObserver(game);
            CreateContextObserver(meta);
            CreateContextObserver(netMessage);
            CreateContextObserver(network);
            CreateContextObserver(room);
            CreateContextObserver(tick);
            CreateContextObserver(unit);
        } catch(System.Exception) {
        }
    }

    public void CreateContextObserver(Entitas.IContext context) {
        if (UnityEngine.Application.isPlaying) {
            var observer = new Entitas.VisualDebugging.Unity.ContextObserver(context);
            UnityEngine.Object.DontDestroyOnLoad(observer.gameObject);
        }
    }

#endif
}
