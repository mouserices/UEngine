//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UnitEntity {

    public RotationListenerComponent rotationListener { get { return (RotationListenerComponent)GetComponent(UnitComponentsLookup.RotationListener); } }
    public bool hasRotationListener { get { return HasComponent(UnitComponentsLookup.RotationListener); } }

    public void AddRotationListener(System.Collections.Generic.List<IRotationListener> newValue) {
        var index = UnitComponentsLookup.RotationListener;
        var component = (RotationListenerComponent)CreateComponent(index, typeof(RotationListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRotationListener(System.Collections.Generic.List<IRotationListener> newValue) {
        var index = UnitComponentsLookup.RotationListener;
        var component = (RotationListenerComponent)CreateComponent(index, typeof(RotationListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRotationListener() {
        RemoveComponent(UnitComponentsLookup.RotationListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UnitMatcher {

    static Entitas.IMatcher<UnitEntity> _matcherRotationListener;

    public static Entitas.IMatcher<UnitEntity> RotationListener {
        get {
            if (_matcherRotationListener == null) {
                var matcher = (Entitas.Matcher<UnitEntity>)Entitas.Matcher<UnitEntity>.AllOf(UnitComponentsLookup.RotationListener);
                matcher.componentNames = UnitComponentsLookup.componentNames;
                _matcherRotationListener = matcher;
            }

            return _matcherRotationListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UnitEntity {

    public void AddRotationListener(IRotationListener value) {
        var listeners = hasRotationListener
            ? rotationListener.value
            : new System.Collections.Generic.List<IRotationListener>();
        listeners.Add(value);
        ReplaceRotationListener(listeners);
    }

    public void RemoveRotationListener(IRotationListener value, bool removeComponentWhenEmpty = true) {
        var listeners = rotationListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveRotationListener();
        } else {
            ReplaceRotationListener(listeners);
        }
    }
}
