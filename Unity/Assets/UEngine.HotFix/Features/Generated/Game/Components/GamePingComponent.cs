//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity pingEntity { get { return GetGroup(GameMatcher.Ping).GetSingleEntity(); } }
    public PingComponent ping { get { return pingEntity.ping; } }
    public bool hasPing { get { return pingEntity != null; } }

    public GameEntity SetPing(long newHalfRTT) {
        if (hasPing) {
            throw new Entitas.EntitasException("Could not set Ping!\n" + this + " already has an entity with PingComponent!",
                "You should check if the context already has a pingEntity before setting it or use context.ReplacePing().");
        }
        var entity = CreateEntity();
        entity.AddPing(newHalfRTT);
        return entity;
    }

    public void ReplacePing(long newHalfRTT) {
        var entity = pingEntity;
        if (entity == null) {
            entity = SetPing(newHalfRTT);
        } else {
            entity.ReplacePing(newHalfRTT);
        }
    }

    public void RemovePing() {
        pingEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PingComponent ping { get { return (PingComponent)GetComponent(GameComponentsLookup.Ping); } }
    public bool hasPing { get { return HasComponent(GameComponentsLookup.Ping); } }

    public void AddPing(long newHalfRTT) {
        var index = GameComponentsLookup.Ping;
        var component = (PingComponent)CreateComponent(index, typeof(PingComponent));
        component.halfRTT = newHalfRTT;
        AddComponent(index, component);
    }

    public void ReplacePing(long newHalfRTT) {
        var index = GameComponentsLookup.Ping;
        var component = (PingComponent)CreateComponent(index, typeof(PingComponent));
        component.halfRTT = newHalfRTT;
        ReplaceComponent(index, component);
    }

    public void RemovePing() {
        RemoveComponent(GameComponentsLookup.Ping);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPing;

    public static Entitas.IMatcher<GameEntity> Ping {
        get {
            if (_matcherPing == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Ping);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPing = matcher;
            }

            return _matcherPing;
        }
    }
}
