//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NetworkContext {

    public NetworkEntity networkServerEntity { get { return GetGroup(NetworkMatcher.NetworkServer).GetSingleEntity(); } }
    public UEngine.Net.NetworkServerComponent networkServer { get { return networkServerEntity.networkServer; } }
    public bool hasNetworkServer { get { return networkServerEntity != null; } }

    public NetworkEntity SetNetworkServer(Telepathy.Server newServer) {
        if (hasNetworkServer) {
            throw new Entitas.EntitasException("Could not set NetworkServer!\n" + this + " already has an entity with UEngine.Net.NetworkServerComponent!",
                "You should check if the context already has a networkServerEntity before setting it or use context.ReplaceNetworkServer().");
        }
        var entity = CreateEntity();
        entity.AddNetworkServer(newServer);
        return entity;
    }

    public void ReplaceNetworkServer(Telepathy.Server newServer) {
        var entity = networkServerEntity;
        if (entity == null) {
            entity = SetNetworkServer(newServer);
        } else {
            entity.ReplaceNetworkServer(newServer);
        }
    }

    public void RemoveNetworkServer() {
        networkServerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NetworkEntity {

    public UEngine.Net.NetworkServerComponent networkServer { get { return (UEngine.Net.NetworkServerComponent)GetComponent(NetworkComponentsLookup.NetworkServer); } }
    public bool hasNetworkServer { get { return HasComponent(NetworkComponentsLookup.NetworkServer); } }

    public void AddNetworkServer(Telepathy.Server newServer) {
        var index = NetworkComponentsLookup.NetworkServer;
        var component = (UEngine.Net.NetworkServerComponent)CreateComponent(index, typeof(UEngine.Net.NetworkServerComponent));
        component.Server = newServer;
        AddComponent(index, component);
    }

    public void ReplaceNetworkServer(Telepathy.Server newServer) {
        var index = NetworkComponentsLookup.NetworkServer;
        var component = (UEngine.Net.NetworkServerComponent)CreateComponent(index, typeof(UEngine.Net.NetworkServerComponent));
        component.Server = newServer;
        ReplaceComponent(index, component);
    }

    public void RemoveNetworkServer() {
        RemoveComponent(NetworkComponentsLookup.NetworkServer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NetworkMatcher {

    static Entitas.IMatcher<NetworkEntity> _matcherNetworkServer;

    public static Entitas.IMatcher<NetworkEntity> NetworkServer {
        get {
            if (_matcherNetworkServer == null) {
                var matcher = (Entitas.Matcher<NetworkEntity>)Entitas.Matcher<NetworkEntity>.AllOf(NetworkComponentsLookup.NetworkServer);
                matcher.componentNames = NetworkComponentsLookup.componentNames;
                _matcherNetworkServer = matcher;
            }

            return _matcherNetworkServer;
        }
    }
}
